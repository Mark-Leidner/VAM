c!#   $Id: sbogus.F,v 1.2 1997/02/12 18:26:09 leidner Exp $
c!#   $Log: sbogus.F,v $
c!#   Revision 1.2  1997/02/12 18:26:09  leidner
c!#   all include files changed to *.h
c!#
c!#	Revision 1.1  1997/02/10  16:39:08  leidner
c!#	Initial revision
c!#
      SUBROUTINE SBOGUS
#include "vam.h"
C***********************************************************************
C*****SBOGUS BOGUSES IN CONVENTIONAL DATA FROM NAMELIST
C-----SPECIFICATIONS
C-----XREFS:
C-----USER : .GRIDX .WINDS ERRSEA ...... ...... ...... ...... ......
C-----FORT : ...COS FRDNL# FWRNL# IBCOM# ...... ...... ...... ......
#include "gparm.h"
#include "sldta.h"
C-----DEFINE NUMERICAL CONSTANTS
      DATA FILL/-777D20/
C-----DEFINE CONVERSION FACTOR: DEGREES TO RADIANS
      DATA FACTOR/1.74532925199432946D-2/
C-----DEFINE CONVERSION FACTOR: KILOMETERS TO DEGREES
      REAL KMDEG
C-----DEFINE TEMPLATES
      INTEGER TX(4),TY(4),TU(4),TV(4),CYCLON,CLOCKW,NPTCU

      data TX/0,1,0,-1/
      data TY/1,0,-1,0/
      data TU/1,0,-1,0/
      data TV/0,-1,0,1/
      data NPTCU/0/
      data kmdeg/111.2d0/
      DATA WGT/1D0/
      REAL LAT,LONG
C-----DEFINE
      NAMELIST /BOGUS/ NBOGUS,NPTC,NPTCU,WGT,CYCLON,SPEED,DIR,
     +   DIST,LAT,LONG
C     DOUBLE PRECISION COS
C     COS(DUMMY)=DCOS(DUMMY)
      IF (NGRDPT.LE.0) CALL ERRSEA (513,6HBOGUS )
C-----DEFAULTS FOR NAMELIST
      NBOGUS=1
  100 CYCLON=1
      SPEED=FILL
      DIR=FILL
      DIST=FILL
      LAT=FILL
      LONG=FILL
C-----
      READ (30,BOGUS,END=1520,ERR=1520)
      IF (NBOGUS.EQ.0) GO TO 1000
C-----
      WRITE (6,101)
  101 FORMAT ('0ADDING BOGUS CONVENTIONAL WINDS DATA.'/)
      CLOCKW=-1
      IF (CYCLON.NE.1) GO TO 200
C-----CYCLONE
      IF (SPEED.EQ.FILL) SPEED=15
      IF (DIST.EQ.FILL) DIST=100
      IF (LAT.LT.0) CLOCKW=1
      GO TO 300
C-----ANTICYCLONE
  200 IF (SPEED.EQ.FILL) SPEED=4
      IF (DIST.EQ.FILL) DIST=250
      IF (LAT.GT.0) CLOCKW=1
  300 IF (LAT.EQ.FILL .OR. LONG.EQ.FILL) GO TO 1520
      WRITE (6,BOGUS)
      IF (DIR.NE.FILL) GO TO 500
      DO 400 I=1,4
      IPT=NPTC+1
      IF (IPT.GT.IDIMC) CALL ERRSEA (521,6HRSLDTA)
C*****TRANSFORMS (LONG,LAT) TO GRID CCOORDINATES
      CALL GRIDX (LONG+TX(I)*DIST/(KMDEG*COS(FACTOR*LAT)),
     +   XS,DELX,IPER,XMIN,XMAX,ILC(IPT),XCONV(IPT),*350)
      CALL GRIDX (LAT+TY(I)*DIST/KMDEG,
     +   YS,DELY,0,YMIN,YMAX,JLC(IPT),YCONV(IPT),*350)
C-----POINT IS ACCEPTED IN GRID
C-----   NPTC     NUMBER OF POINTS IN COMMON
C-----   NPTCU    NUMBER OF BOGUS POINTS ADDED
      NPTC=NPTC+1
      NPTCU=NPTCU+1
  350 WCONV(IPT)=WGT
      ICONV(IPT)=1
      UCONV(IPT)=TU(I)*(CLOCKW*SPEED)
      VCONV(IPT)=TV(I)*(CLOCKW*SPEED)
      WRITE (6,203) IPT,NPTC,NPTCU,ILC(IPT),JLC(IPT),
     +   XCONV(IPT),YCONV(IPT),WCONV(IPT),ICONV(IPT),
     +   UCONV(IPT),VCONV(IPT)
  203 FORMAT (1X,2I10,3I5,2F7.4,F4.0,I4,2F8.2)
  400 CONTINUE
C-----
      GO TO 600
C*****IF DIR IS GIVEN A SINGLE BOGUS POINT IS ADDED
  500 IPT=NPTC+1
      IF (IPT.GT.IDIMC) CALL ERRSEA (521,6HRSLDTA)
      CALL GRIDX (LONG,XS,DELX,IPER,XMIN,XMAX,ILC(IPT),XCONV(IPT),*550)
      CALL GRIDX (LAT,YS,DELY,0,YMIN,YMAX,JLC(IPT),YCONV(IPT),*550)
      NPTC=NPTC+1
      NPTCU=NPTCU+1
  550 WCONV(IPT)=WGT
      ICONV(IPT)=1
C-----CONVERT TO RADIANS
      DIRRAD=DIR*FACTOR
      CALL WINDS (UCONV(IPT),VCONV(IPT),SPEED,DIRRAD,.TRUE.)
      WRITE (6,203) IPT,NPTC,NPTCU,ILC(IPT),JLC(IPT),
     +   XCONV(IPT),YCONV(IPT),WCONV(IPT),ICONV(IPT),
     +   UCONV(IPT),VCONV(IPT)
C-----
  600 NBOGUS=NBOGUS-1
      IF (NBOGUS.GT.0) GO TO 100
      RETURN
C-----ELIMINATE BOGUS POINTS LAST ADDED IF NBOGUS IS SET TO 0.
 1000 NPTC=NPTC-NPTCU
      WRITE (6,102)
  102 FORMAT ('0DELETING BOGUS CONVENTIONAL WINDS DATA.'/)
      WRITE (6,BOGUS)
      RETURN
 1520 WRITE (6,BOGUS)
      CALL ERRSEA (520,6HRSLDTA)
      RETURN
      END
