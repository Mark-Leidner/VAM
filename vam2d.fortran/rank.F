c!#   $Id: rank.F,v 1.1 1997/02/10 16:39:08 leidner Exp $
c!#   $Log: rank.F,v $
c!#   Revision 1.1  1997/02/10 16:39:08  leidner
c!#   Initial revision
c!#
*--------------------------------------------------------------------------
C ROUTINE          RANK  SUBROUTINE  R0003  FORT77  RANK.FOR
C                  
C PURPOSE          RANK SOLUTIONS IN ORDER OF PROBABILITY 
C                                                   
C PROJECT          EDIPVS
C
C ARGUMENTS        VSOL  (ENTRY/EXIT)  R4  4 WIND SPEEDS (M/S)
C                  DSOL  (ENTRY/EXIT)  R4  4 WIND DIRECTIONS (DEG)
C                  RSOL  (ENTRY/EXIT)  R4  4 PROBABILITIES (0.0-1.0)
C                  NVS   (EXIT)        I4  NO. OF VALID SOLUTIONS (0-4)
C                  IRK1  (EXIT)        I4  PREVIOUS RANK OF NEW RANK 1 (1-4)
C
C DESCRIPTION      GIVEN THE 'RAW' AMBIGUOUS SOLUTIONS FROM THE WIND 
C                  RETRIEVAL FITTING PROCESS, THIS ROUTINE RANKS THEM 
C                  IN ORDER OF DECREASING PROBABILITY (BY A BUBBLE-SORT)
C                  ON EXIT, THE MOST PROBABLE SOLUTION (RANK 1) IS FIRST 
C                  IN THE ARRAYS. ON EXIT, THE PROBABILITIES ARE
C                  RELATIVE FOR EACH SOLUTION (I.E. SUM TO UNITY) UNLESS
C                  ON ENTRY ALL RSOL VALUES ARE ZERO. ALSO RETURNED IS
C                  THE NUMBER OF VALIS SOLUTIONS (SCALED RSOL>0.001).
C
C VERSION          1.04  NOVEMBER 1992  ORIG: D. OFFILER  SEP 89
C
C CHANGES          01  A) INCREASE THESHOLD FOR LARGE, BUT VALID 
C                         RESIDUALS (BIGADD 1,000 --> 100,000).  
C                      B) COUNT & RETURN NO. OF VALID SOLUTIONS.
C                      C) FUNCTION ANG180 CODED IN-LINE.
C                                                     D.O.   7 JAN 92
C                  02  LOSING PRECISION WITH LARGE BIGADD AND VERY
C                      SMALL RESIDUALS; MAKE BIGADD DYNAMIC - JUST 
C                      BIGGER THAN ABSOLUTE VALUE OF BIGGEST RESIDUAL.  
C                                                     D.O.  16 SEP 92
C                  03  RAISE DTOL FROM 10 TO 20 DEG.  D.O.  15 OCT 92
C                  04  A) RANK BY DECREASING PROBABILITY, RATHER THAN
C                         BY INCREASING RESIDUAL. 
C                      B) DON'T REJECT DUPLICATES (WHICH SHOULD NO 
C                         LONGER BE GENERATED BY S/R WINRET.
C                                                     D.O.  26 NOV 92
C
c
c Recieved by P.WOICESHYN (JPL/NOAA-NMC) from Dave OFFILER, UKMO, Bracknell, UK
c	for use and modification as part of the ESA calibration
c	and validation team activity -- FEB 18, 1993.
c
c	Transfer of this code to other users is not permitted without receiving
c	prior permission from Woiceshyn and Offiler.
c
c	Errors and modifications of this code are to be reported to Woiceshyn.
c	
c
c
      SUBROUTINE RANK ( VSOL, DSOL, RSOL, NVS, IRK1 )

      IMPLICIT NONE

      INTEGER NB, NS
      REAL    EPS, RMIN
      PARAMETER ( NB   = 3, NS = 4 ) ! NB = no. beams/NS = max no. solns
      PARAMETER ( EPS  = 1E-7 )      ! an arbitrary small value
      PARAMETER ( RMIN = 0.001 )     ! minimum prob. to be a valid soln.
                                     ! (after scaling)

* ARGUMENT LIST PARAMETERS

      INTEGER NVS, IRK1
      REAL    VSOL(NS), DSOL(NS), RSOL(NS)

* LOCAL PARAMETERS
   
      INTEGER I, J
      REAL    PTOT, RR, VV, DD

* SCALE PROBABILITES TO SUM TO UNITY & COUNT NO. OF VALID SOLUTIONS

      PTOT = 0.0
      DO 10 I = 1, NS
         PTOT = PTOT + RSOL(I)
   10 CONTINUE

      NVS = 0
      IF ( PTOT .GT. EPS ) THEN
         DO 20 I = 1, NS
            RSOL(I) = RSOL(I) / PTOT
            IF ( RSOL(I) .GT. RMIN ) NVS = NVS + 1
   20    CONTINUE
      ENDIF

* RANK SOLUTIONS IN DECREASING ORDER OF (RELATIVE) PROBABILITY BY BUBBLE SORT

      IRK1 = 1
      DO 40 I = 1, NS-1
         DO 30 J = I+1, NS
            IF ( RSOL(J) .GT. RSOL(I) ) THEN
               VV = VSOL(J)
               DD = DSOL(J)
               RR = RSOL(J)

               VSOL(J) = VSOL(I)
               DSOL(J) = DSOL(I)
               RSOL(J) = RSOL(I)

               VSOL(I) = VV
               DSOL(I) = DD
               RSOL(I) = RR

               IF ( I .EQ. 1 ) IRK1 = J
            ENDIF
   30    CONTINUE
   40 CONTINUE

      END
